{"version":3,"sources":["toolkit/darkSlice.ts","api/index.ts","toolkit/userSlice.ts","toolkit/diarySlice.ts","alerts/index.ts","components/FrontPage/Header.tsx","components/FrontPage/Body.tsx","components/FrontPage/Footer.tsx","Head.tsx","components/FrontPage/index.tsx","components/SigninPage/index.tsx","components/SignupPage/index.tsx","components/UsersPage/Header.tsx","toolkit/hisuseridSlice.ts","components/UsersPage/List.tsx","images/pic1.png","images/wallpaper1.png","images/wallpaper2.png","images/wallpaper3.png","images/pic2.png","DelayRender.tsx","components/UsersPage/Data.tsx","components/UsersPage/index.tsx","components/DiariesPage/Header.tsx","toolkit/useridSlice.ts","components/EditDiary.tsx","components/ReadDiary.tsx","components/DiariesPage/List.tsx","components/NewDiary.tsx","components/DiariesPage/Data.tsx","components/DiariesPage/index.tsx","components/HisPublicDiariesPage/Header.tsx","components/HisPublicDiariesPage/List.tsx","components/HisPublicDiariesPage/index.tsx","components/SigningIn.tsx","components/SigningOut.tsx","App.tsx","toolkit/store.ts","server/index.ts","index.tsx"],"names":["darkSlice","createSlice","name","initialState","value","reducers","changeDark","state","actions","selectDark","darkSliceReducer","instance","axios","create","baseURL","fetchUser","a","get","data","fetchDiary","postDiary","title","privacy","notes","id","userId","createdDate","createdTime","post","catch","err","console","log","res","postUser","username","email","password","matched","fetchedUser","createAsyncThunk","response","userSlice","matchUser","action","lastUpdate","length","map","item","payload","quitUser","extraReducers","fulfilled","push","rejected","pending","selectUser","userSliceReducer","fetchedDiary","diarySlice","editNotes","editTitle","editPrivacy","selectDiary","diarySliceReducer","darkAlert","dark","Swal","fire","icon","text","timer","showConfirmButton","pageDelayAlert","timerProgressBar","pageAlert","position","alertType","showCancelButton","cancelButtonText","toast","showClass","popup","backdrop","hideClass","Header","useSelector","history","useHistory","screen700","useMediaQuery","screen500","AppBar","elevation","className","Toolbar","Typography","onClick","Button","disableRipple","size","Body","dispatch","useDispatch","fontSize","style","marginLeft","Footer","href","target","rel","Head","Helmet","FrontPage","process","time","Promise","acc","setTimeout","useStyles","makeStyles","theme","root","height","image","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","form","width","marginTop","submit","SigninPage","classes","users","useState","visiblity","setVisiblity","Grid","container","component","CssBaseline","xs","sm","md","Paper","square","Avatar","variant","initialValues","validationSchema","object","string","max","min","required","onSubmit","values","isSubmitting","autoComplete","Box","paddingBottom","fullWidth","TextField","label","color","autoFocus","disabled","startIcon","CircularProgress","to","mt","align","Link","Date","getFullYear","IconButton","backgroundImage","visiblity1","setVisiblity1","visiblity2","setVisiblity2","confirmpassword","agreeTnC","oneOf","ref","boolean","CheckboxWithLabel","Label","eachMatchedBooleans","ifAnyMatchedTrue","includes","hisuseridSlice","storeHisuserid","selectHisuserid","hisuseridSliceReducer","createStyles","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","secondary","List","expanded","setExpanded","themeA","createMuiTheme","background","themeB","ThemeProvider","classnames","Accordion","onChange","panel","event","isExpanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","DelayRender","children","mounted","mountAfter","unmountAfter","Data","screen292","screen420","src","pic1","alt","Hidden","smDown","mdUp","UsersPage","useridSlice","storeUserid","selectUserid","useridSliceReducer","EditDiary","handleEdit","input","inputOptions","inputValue","confirmButtonText","undefined","handleNotes","handleTitle","handlePrivacy","inputPlaceholder","public","private","ReadDiary","modalShow","setModalShow","Modal","show","onHide","aria-labelledby","centered","scrollable","closeButton","Title","diaries","userid","no","str","n","substr","NewDiary","handleChange","mixin","progressSteps","queue","getDate","getMonth","toLocaleTimeString","screen255","DiariesPage","hisuserid","HisPublicDiariesPage","SigningIn","thatUserId","indexOf","SigningOut","useEffect","App","primary","main","path","exact","SignupPage","store","configureStore","reducer","createServer","routes","this","namespace","user","diary","schema","req","JSON","parse","requestBody","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36e3ed01.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const darkSlice = createSlice({\n    name: \"dark\",\n\n    initialState: {\n        value: true\n    } as {\n        value: boolean\n    },\n\n    reducers: {\n        changeDark: (state) => {\n            state.value = !state.value\n        }\n    }\n})\n\nexport const { changeDark } = darkSlice.actions;\nexport const selectDark = (state) => state.darkSliceReducer.value;\nexport default darkSlice.reducer;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'api'\n})\n\nexport const fetchUser = async() => {\n    const { data } = await instance.get('user');\n    return data;\n}\n\nexport const fetchDiary = async() => {\n    const { data } = await instance.get('diary');\n    return data;\n}\n\nexport const postDiary = async({ title, privacy, notes, id, userId, createdDate, createdTime }) => {\n    const res = await instance.post('newdiary', {\n        title       : title,\n        privacy     : privacy,\n        notes       : notes,\n        id          : id,\n        userId      : userId,\n        createdDate : createdDate,\n        createdTime : createdTime\n    })\n    .catch(err => console.log(err))\n\n    return res;\n}\n\nexport const postUser = async({ username, email, password, id }) => {\n    const res = await instance.post('newuser', {\n        username : username,\n        email    : email,\n        password : password,\n        id       : id,\n        matched  : false\n    })\n    .catch(err => console.log(err))\n\n    return res;\n}","import { createSlice, createAsyncThunk, AsyncThunk } from '@reduxjs/toolkit';\nimport { user } from '../interfaces/user.interface';\n//AXIOS\nimport { fetchUser } from '../api';\n//FIXED\nimport { Observable } from 'rxjs-compat';\n\nexport const fetchedUser: AsyncThunk<any, void, {}> = createAsyncThunk(\n    'data/fetchedUser',\n    async() => {\n        const response = await fetchUser();\n        return response;\n    }\n)\n\nexport const userSlice = createSlice({\n    name: \"user\",\n\n    initialState: [] as user[],\n\n    reducers: {\n        matchUser: (state, action) => {\n            let lastUpdate: Observable<user> = state[state.length-1];\n\n            return state.map(item => {\n                if(state[state.length-1]) {                                  //updated data comes as last array of state\n                    return lastUpdate.map(item => {\n                        if(\n                            (item.username === action.payload.username) &&\n                            (item.password === action.payload.password)\n                        ) {\n                            console.log(\"match\", action.payload);            //return user's data for match\n        \n                            return {\n                                ...item,\n                                matched: true\n                            }\n                        }\n        \n                        return {                                             //rest of others not match so false\n                            ...item,\n                            matched: false\n                        }\n                    })    \n                }\n                \n                return item;\n            })\n        },\n\n\n        quitUser: (state) => {\n            let lastUpdate: Observable<user> = state[state.length-1];\n\n            return state.map(item => {\n                if(state[state.length-1]) {                                  //updated data comes as last array of state\n                    return lastUpdate.map(item => {\n                        console.log(\"quit\");\n                        return {                                             // user's & all not match so false\n                            ...item,\n                            matched: false\n                        }\n                    })    \n                }\n                \n                return item;\n            })\n        }        \n    },\n\n    extraReducers: {\n        [fetchedUser.fulfilled as any]: (state, action) => {        //api call successful\n            console.log(\"api call fulfilled\");\n            //pushing data to server's api\n            state.push(action.payload);\n        },\n\n        [fetchedUser.rejected as any]: (state, action) => {         //api call failed\n            console.log(\"api call rejected\");\n        },\n\n        [fetchedUser.pending as any]: (state, action) => {          //api call pending\n            console.log(\"api call pending\");\n        }\n    }\n})\n\nexport const { matchUser, quitUser } = userSlice.actions;\nexport const selectUser = (state) => state.userSliceReducer;\nexport default userSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { diary } from '../interfaces/diary.interface';\n//AXIOS\nimport { fetchDiary } from '../api';\n//FIXED\nimport { Observable } from 'rxjs-compat';\n\nexport const fetchedDiary = createAsyncThunk(\n    'data/fetchedDiary',\n    async() => {\n        const response = await fetchDiary();\n        return await response;\n    }\n)\n\nexport const diarySlice = createSlice({\n    name: \"diary\",\n\n    initialState: [] as diary[],\n\n    reducers: {\n        editNotes: (state, action) => {\n            let lastUpdate: Observable<diary> = state[state.length-1];\n\n            return state.map(item => {\n                if(state[state.length-1]) {                                 //updated data comes as last array of state\n                    return lastUpdate.map(item => {\n                        if(\n                            (item.id === action.payload.id)\n                        ) {\n                            console.log(\"edit\", action.payload.id);         //return diary's id for edit\n        \n                            return {\n                                ...item,\n                                notes: action.payload.notes\n                            }\n                        }\n        \n                        return item;                                        //rest of others remains same\n                    })\n                }\n                \n                return item;\n            })\n        },\n\n\n        editTitle: (state, action) => {\n            let lastUpdate: Observable<diary> = state[state.length-1];\n\n            return state.map(item => {\n                if(state[state.length-1]) {                                 //updated data comes as last array of state\n                    return lastUpdate.map(item => {\n                        if(\n                            (item.id === action.payload.id)\n                        ) {\n                            console.log(\"edit\", action.payload.id);         //return diary's id for edit\n        \n                            return {\n                                ...item,\n                                title: action.payload.title\n                            }\n                        }\n        \n                        return item;                                        //rest of others not match so false\n                    })\n                }\n                \n                return item;\n            })\n        },\n\n\n        editPrivacy: (state, action) => {\n            let lastUpdate: Observable<diary> = state[state.length-1];\n\n            return state.map(item => {\n                if(state[state.length-1]) {                                 //updated data comes as last array of state\n                    return lastUpdate.map(item => {\n                        if(\n                            (item.id === action.payload.id)\n                        ) {\n                            console.log(\"edit\", action.payload.id);         //return diary's id for edit\n        \n                            return {\n                                ...item,\n                                privacy: action.payload.privacy\n                            }\n                        }\n        \n                        return item;                                        //rest of others remains same\n                    })\n                }\n                \n                return item;\n            })\n        }\n    },\n\n    extraReducers: {\n        [fetchedDiary.fulfilled as any]: (state, action) => {        //api call successful\n            console.log(\"api call fulfilled\");\n            //pushing data to server's api\n            state.push(action.payload);\n        },\n\n        [fetchedDiary.rejected as any]: (state, action) => {         //api call failed\n            console.log(\"api call rejected\");\n        },\n\n        [fetchedDiary.pending as any]: (state, action) => {          //api call pending\n            console.log(\"api call pending\");\n        }\n    }\n})\n\nexport const { editNotes, editTitle, editPrivacy } = diarySlice.actions;\nexport const selectDiary = (state) => state.diarySliceReducer;\nexport default diarySlice.reducer;","//SWEETALERT2\nimport Swal, { SweetAlertIcon, SweetAlertPosition } from 'sweetalert2';\n\nexport const darkAlert = (dark: boolean) => {\n    Swal.fire({\n        icon: 'info',\n        title: `<p id=\"design\">${!dark ? `Dark` : `Light`}</p>`,\n        text: `You enabled ${!dark ? `Dark` : `Light`} Theme!`,\n        timer: 2000,\n        showConfirmButton: false\n    })\n}\n\nexport const signupAlert = () => {\n    Swal.fire({\n        icon: 'success',\n        title: '<p id=\"design\">successfully SignedUp!</p>',\n        timer: 2000,\n        showConfirmButton: false,\n        timerProgressBar: true\n    })\n}\n\nexport const signinSuccessAlert = () => {\n    Swal.fire({\n        icon: 'success',\n        title: '<p id=\"design\">successfully SignIn!</p>',\n        timer: 2000,\n        showConfirmButton: false,\n        timerProgressBar: true\n    })\n}\n\nexport const signinErrorAlert = () => {\n    Swal.fire({\n        icon: 'error',\n        title: `<p id=\"design\">Can't SignIn!</p>`,\n        text: 'incorrect Username or Password',\n        confirmButtonText: 'Retry'\n    })\n}\n\nexport const signoutSuccessAlert = () => {\n    Swal.fire({\n        icon: 'success',\n        title: '<p id=\"design\">successfully SignOut!</p>',\n        timer: 2000,\n        showConfirmButton: false,\n        timerProgressBar: true\n    })\n}\n\nexport const pageDelayAlert = (title: string) => {\n    Swal.fire({\n        icon: 'info',\n        title: `<p id=\"design\">${title}</p>`,\n        text: `welcome to ${title} page`,\n        timer: 2000,\n        showConfirmButton: false,\n        timerProgressBar: true\n    })\n}\n\nexport const pageAlert = (title = 'Something happened', position?: SweetAlertPosition, alertType?: SweetAlertIcon): void => {\n    Swal.fire({\n        title,\n        icon: alertType,\n        timer: 2500,\n        showConfirmButton: false,\n        timerProgressBar: true,\n        showCancelButton: true,\n        cancelButtonText: 'Close',\n        toast: true,\n        position,\n        //CSS classes for animations when showing a popup (fade in)\n        showClass: {\n            popup: 'swal2-noanimation',\n            backdrop: 'swal2-noanimation'\n        },\n        //CSS classes for animations when hiding a popup (fade out)\n        hideClass: {\n            popup: '',\n            backdrop: ''\n        }\n    })\n}","import React from 'react';\n//MATERIAL-UI\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n//ROUTER-DOM\nimport { useHistory } from 'react-router-dom';\n//REDUX-TOOLKIT\nimport { useSelector } from 'react-redux';\nimport { selectDark } from '../../toolkit/darkSlice';\n//SWEETALERT2\nimport { pageDelayAlert, pageAlert } from '../../alerts';\n\nfunction Header() {\n    const dark = useSelector(selectDark);\n    const history = useHistory();\n\n    const screen700 = useMediaQuery('(max-width:700px)');\n    const screen500 = useMediaQuery('(max-width:500px)');\n\n    return (\n        <AppBar\n            elevation={0}\n            className=\"header\"\n            id={dark ? \"darkRespectAll\" : \"lightRespectAll\"}\n        >\n            <Toolbar className=\"toolbar\">\n                <Typography className=\"toolbar_heading\" onClick={() => history.push('/')}>\n                    Diary {screen500 ? `App` : `Application`} \n                </Typography>\n\n                <div>\n                    <Button\n                        disableRipple\n                        onClick={() => {\n                            history.push('/signin');\n                            pageAlert('Signin Form', 'top-end', 'success');                            \n                        }}\n                        size={screen700 ? \"small\" : \"medium\"}\n                    >\n                        SIGN IN\n                    </Button>\n                   \n                    <Button\n                        disableRipple\n                        onClick={() => {\n                            history.push('/signup');\n                            pageAlert('Signup Form', 'top-start', 'success');\n                        }}\n                        size={screen700 ? \"small\" : \"medium\"}\n                    >\n                        SIGN UP\n                    </Button>\n                    \n                    <Button\n                        disableRipple\n                        onClick={() => {\n                            history.push('/users');\n                            pageDelayAlert('Users');\n                        }}\n                        size={screen700 ? \"small\" : \"medium\"}\n                        className=\"hideon430\"\n                    >\n                        USERS\n                    </Button>\n                    \n                    <Button\n                        disableRipple\n                        onClick={() => {\n                            history.push('/diaries');\n                            pageDelayAlert('Diaries');\n                        }}\n                        size={screen700 ? \"small\" : \"medium\"}\n                        className=\"hideon430\"\n                    >\n                        DIARIES\n                    </Button>\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Header;","import React from 'react';\n//MATERIAL-UI\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport { Typography } from '@material-ui/core';\n//REDUX-TOOLKIT\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectDark, changeDark } from '../../toolkit/darkSlice';\n//SWEETALERT2\nimport { darkAlert } from '../../alerts';\n\nfunction Body() {\n    const dark = useSelector(selectDark);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <div>\n                <Typography className=\"p1\" id={dark ? \"darkRespectTextOutlined\" : \"lightRespectTextOutlined\"}>\n                    Diary\n                </Typography>\n\n                <Typography className=\"p2\" id={dark ? \"darkRespectText\" : \"lightRespectText\"}>\n                    “ By beginning a diary, I was already conceding that life would be more bearable if I looked at it as an adventure and a tale. I was telling myself the story of a life, and this transmutes into an adventure the things which can shatter you. ”\n                    <p><b><i> ― Anaïs Nin </i></b></p>\n                </Typography>\n            </div>\n\n            <button\n                className={`btn btn-outline-${dark ? `info` : `dark` }`}\n                onClick={() => {\n                    dispatch(changeDark());\n                    darkAlert(dark);\n                }}\n            >\n                { dark ? <Brightness4Icon fontSize=\"small\"/>: <Brightness7Icon fontSize=\"small\"/> }\n                <span style={{ marginLeft: \"0.2rem\" }}> { dark ? `light` : `dark` } theme </span>\n            </button>\n        </>\n    )\n}\n\nexport default Body;","import React from 'react';\n//REDUX-TOOLKIT\nimport { useSelector } from 'react-redux';\nimport { selectDark } from '../../toolkit/darkSlice';\n\nfunction Footer() {\n    const dark = useSelector(selectDark);\n\n    return (\n        <footer\n            className=\"footer page-footer font-small stylish-color-dark pt-4\"\n            id={dark ? \"darkRespectAll\" : \"lightRespectAll\"}\n        >\n            <div className=\"footer-copyright text-center\"> © 2020 Copyright:\n                <a href=\"https://www.writediary.com/\" target=\"_blank\" rel=\"noreferrer\"> writediary.com </a>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\ninterface HeadProps {\n    title: string;\n}\n\nfunction Head({ title }: HeadProps) {\n    const AppName = \"Diary App\";\n\n    return (\n        <Helmet\n            title={`${title} | ${AppName}`}\n        />\n    )\n}\n\nexport default Head;","import React from 'react';\nimport Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\n//REACT-HELMET\nimport Head from '../../Head';\n\nfunction FrontPage() {\n    return (\n        <>\n            <Head title=\"Home\"/>\n\n            <div className=\"frontpage\">\n                <div className=\"frontpage_header\">\n                    <Header\n                    />\n                </div>\n    \n                <div className=\"frontpage_body\">\n                    <Body\n                    />\n                </div>\n    \n                <div className=\"frontpage_footer\">\n                    <Footer\n                    />\n                </div>           \n            </div>\n        </>\n    )\n}\n\nexport default FrontPage;","import React, { useState } from 'react';\n//MATERIAL-UI\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\n//ROUTER-DOM\nimport { Link as Linked, useHistory } from 'react-router-dom';\n//REDUX-TOOLKIT\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectDark, changeDark } from '../../toolkit/darkSlice';\nimport { selectUser, matchUser } from '../../toolkit/userSlice';\n//FORMIK\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\n//YUP\nimport { object, string } from 'yup';\n//SWEETALERT2\nimport { darkAlert, pageAlert } from '../../alerts';\n//REACT-HELMET\nimport Head from '../../Head';\n\nconst process = (time: number) => new Promise(acc => setTimeout(acc, time));\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    }\n}))\n\nfunction SigninPage() {\n    const classes = useStyles();\n\n    const dark = useSelector(selectDark);\n    const users = useSelector(selectUser);\n    const dispatch = useDispatch();\n\n    const [ visiblity, setVisiblity ] = useState<boolean>(false);\n\n    const history = useHistory();\n\n    if(users[users?.length-1] === []) {\n        return <div> Loading. . . </div>\n    }\n    else {\n        return (\n            <>\n                <Head title=\"SignIn\"/>\n\n                <Grid container component=\"main\" className={classes.root}>\n                    <CssBaseline/>\n                    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                        <div className={classes.paper}>\n                            <Avatar className={classes.avatar} style={{ backgroundColor: dark ? \"#5bc0de\" : \"#000000\" }}>\n                                <VpnKeyIcon/>\n                            </Avatar>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Sign in\n                            </Typography>\n        \n        \n        \n                            <Formik\n                                initialValues={{\n                                    username: \"ali\",\n                                    password: \"ali123\"\n                                }}\n                                validationSchema={\n                                    object({\n                                        username : string()\n                                        .max(30, 'Must be atmost 30 character')\n                                        .min(3, 'Must have atleast 3 characters')\n                                        .required('Must fill username'),\n        \n                                        password: string()\n                                        .max(10, 'Must be atmost than 10 characters')\n                                        .min(6, 'Must be atleast than 6 characters')\n                                        .required('Must fill password')\n                                    })\n                                }\n                                onSubmit={async (values) => {\n                                    dispatch(matchUser(values));       //sending as object to redux for only device not server's api\n    \n    \n                                    pageAlert('Submitting...', 'top-end', 'info');\n                                    await process(2500);\n                                    history.push('/signingin');\n                                }}\n                            >\n                                {({ isSubmitting }) => (\n                                    <Form className={classes.form} autoComplete=\"off\">\n                                        \n                                        <Box paddingBottom={1}>\n                                            <Field fullWidth name='username' component={TextField} label=\"Username\"\n                                                color={dark ? \"secondary\" : \"primary\"}\n                                                autoFocus\n                                            />\n                                        </Box>\n        \n                                        <Box paddingBottom={1} display=\"flex\" alignItems=\"center\">\n                                            <Field fullWidth name='password' component={TextField} label=\"Password\"\n                                                color={dark ? \"secondary\" : \"primary\"}\n                                                type={visiblity ? \"text\" : \"password\"}\n                                            />\n                                            { visiblity ? <VisibilityIcon fontSize=\"small\" onClick={() => setVisiblity(false)}/> : <VisibilityOffIcon fontSize=\"small\" onClick={() => setVisiblity(true)}/> }\n                                        </Box>\n        \n                                        <Button \n                                            fullWidth\n                                            type=\"submit\"\n                                            variant=\"contained\"\n                                            className={classes.submit}\n                                            disabled={isSubmitting}\n                                            startIcon={isSubmitting ? <CircularProgress size=\"1rem\"/> : null}\n                                            color={dark ? \"secondary\" : \"primary\"}\n                                        >\n                                            Sign In\n                                        </Button>\n                                        \n                                        <Grid container>\n                                            <Grid item>\n                                                <Linked to='/signup' style={{ color: dark ? \"#5bc0de\" : \"#000000\" }}>\n                                                    Don't have an account? Sign Up\n                                                </Linked>\n                                            </Grid>\n                                        </Grid>\n        \n                                        <Box mt={4}>\n                                           <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                                                {'Copyright © '}\n                                                <Link color=\"inherit\" href=\"https://www.writediary.com/\">\n                                                    Diary\n                                                </Link>{' '}\n                                                {new Date().getFullYear()}\n                                                {'.'}\n        \n                                                <IconButton onClick={() => {\n                                                    dispatch(changeDark());\n                                                    darkAlert(dark);\n                                                }}>\n                                                    { dark ? <Brightness4Icon fontSize=\"small\"/>: <Brightness7Icon fontSize=\"small\"/> }\n                                                </IconButton>\n                                           </Typography>\n                                        </Box>\n        \n                                    </Form>\n                                )}\n                            </Formik>\n        \n        \n        \n                        </div>\n                    </Grid>\n                    <Grid item xs={false} sm={4} md={7} className={classes.image} id=\"image\"/>\n                </Grid>\n            </>\n        )\n    }\n}\n\nexport default SigninPage;","import React, { useState } from 'react';\n//MATERIAL-UI\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\n//ROUTER-DOM\nimport { Link as Linked, useHistory } from 'react-router-dom';\n//REDUX-TOOLKIT\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectDark, changeDark } from '../../toolkit/darkSlice';\nimport { selectUser } from '../../toolkit/userSlice';\n//FORMIK\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField, CheckboxWithLabel } from 'formik-material-ui';\n//YUP\nimport { object, string, boolean, ref } from 'yup';\n//SWEETALERT2\nimport { darkAlert, signupAlert, pageAlert } from '../../alerts';\n//FOR NEW USER\nimport { postUser } from '../../api';\nimport { fetchedUser } from '../../toolkit/userSlice';\n//REACT-HELMET\nimport Head from '../../Head';\n\nconst process = (time: number) => new Promise(acc => setTimeout(acc, time));\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(https://source.unsplash.com/random/?diary)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    }\n}))\n\nfunction SigninPage() {\n    const classes = useStyles();\n\n    const dark = useSelector(selectDark);\n    const users = useSelector(selectUser);  //for id of new user only\n    const dispatch = useDispatch();\n\n    const [ visiblity1, setVisiblity1 ] = useState<boolean>(false);\n    const [ visiblity2, setVisiblity2 ] = useState<boolean>(false);\n\n    const history = useHistory();\n\n    return (\n        <>\n            <Head title=\"SignUp\"/>\n\n            <Grid container component=\"main\" className={classes.root}>\n                <CssBaseline/>\n                <Grid item xs={false} sm={4} md={7} className={classes.image} id=\"image\"/>\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar} style={{ backgroundColor: dark ? \"#5bc0de\" : \"#000000\" }}>\n                            <TelegramIcon/>\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign up\n                        </Typography>\n    \n    \n    \n                        <Formik\n                            initialValues={{\n                                username: \"\",\n                                email: \"\",\n                                password: \"\",\n                                confirmpassword: \"\",\n                                agreeTnC: false\n                            }}\n                            validationSchema={\n                                object({\n                                    username: string()\n                                    .max(30, 'Must be atmost 30 character')\n                                    .min(3, 'Must have atleast 3 characters')\n                                    .required('Must fill username'),\n    \n                                    email: string()\n                                    .email('Must be a valid email')\n                                    .max(30, 'Must be atmost 30 character')\n                                    .min(5, 'Must be atleast 5 characters')\n                                    .required('Must be email'),\n    \n                                    password: string()\n                                    .max(10, 'Must be atmost than 10 characters')\n                                    .min(6, 'Must be atleast than 6 characters')\n                                    .required('Must fill password'),\n    \n                                    confirmpassword: string()\n                                    .max(10, 'Must be atmost than 10 characters')\n                                    .min(6, 'Must be atleast than 6 characters')\n                                    .required('Must fill password')\n                                    .oneOf([ref(\"password\")], \"Both password need to be the same\"),\n    \n                                    agreeTnC: boolean()\n                                    .oneOf([true], 'Must be agree to terms & conditions')\n                                })\n                            }\n                            onSubmit={async (values) => {\n                                postUser({                    //updating data to server's api\n                                    username : values.username,\n                                    email    : values.email,\n                                    password : values.password,\n                                    id       : users.length\n                                })\n                                dispatch(fetchedUser());      //saving updated data to redux\n    \n    \n                                pageAlert('Registering...', 'top-start', 'info');\n                                await process(2500);\n                                history.push('/');\n                                signupAlert();\n                            }}\n                        >\n                            {({ isSubmitting }) => (\n                                <Form className={classes.form} autoComplete=\"off\">\n                                    \n                                    <Box paddingBottom={1}>\n                                        <Field fullWidth name='username' component={TextField} label=\"Username\"\n                                               color={dark ? \"secondary\" : \"primary\"}\n                                               autoFocus\n                                        />\n                                    </Box>\n    \n                                    <Box paddingBottom={1}>\n                                        <Field fullWidth name='email' component={TextField} label=\"Email\"\n                                               color={dark ? \"secondary\" : \"primary\"}\n                                        />\n                                    </Box>\n    \n                                    <Box paddingBottom={1} display=\"flex\" alignItems=\"center\">\n                                        <Field fullWidth name='password' component={TextField} label=\"Password\"\n                                               color={dark ? \"secondary\" : \"primary\"}\n                                               type={visiblity1 ? \"text\" : \"password\"}\n                                        />\n                                        { visiblity1 ? <VisibilityIcon fontSize=\"small\" onClick={() => setVisiblity1(false)}/> : <VisibilityOffIcon fontSize=\"small\" onClick={() => setVisiblity1(true)}/> }\n                                    </Box>\n    \n                                    <Box paddingBottom={1} display=\"flex\" alignItems=\"center\">\n                                        <Field fullWidth name='confirmpassword' component={TextField} label=\"Confirm Password\"\n                                               color={dark ? \"secondary\" : \"primary\"}\n                                               type={visiblity2 ? \"text\" : \"password\"}\n                                        />\n                                        { visiblity2 ? <VisibilityIcon fontSize=\"small\" onClick={() => setVisiblity2(false)}/> : <VisibilityOffIcon fontSize=\"small\" onClick={() => setVisiblity2(true)}/> }\n                                    </Box>\n    \n                                    <Box paddingBottom={1}>\n                                        <Field name='agreeTnC' type=\"checkbox\" component={CheckboxWithLabel} Label={{label: \"I agree to TnC's\"}}\n                                               color={dark ? \"secondary\" : \"primary\"}\n                                        />\n                                        <ErrorMessage name='agreeTnC' component=\"p\" className=\"agreeTnC\"/>\n                                    </Box>\n    \n                                    <Button \n                                        fullWidth\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        className={classes.submit}\n                                        disabled={isSubmitting}\n                                        startIcon={isSubmitting ? <CircularProgress size=\"1rem\"/> : null}\n                                        color={dark ? \"secondary\" : \"primary\"}\n                                    >\n                                        Sign Up\n                                    </Button>\n    \n                                    <Grid container>\n                                        <Grid item>\n                                            <Linked to='/signin' style={{ color: dark ? \"#5bc0de\" : \"#000000\" }}>\n                                                Already have an account? Sign in\n                                            </Linked>\n                                        </Grid>\n                                    </Grid>\n    \n                                    <Box mt={4}>\n                                       <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                                            {'Copyright © '}\n                                            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                                                Diary\n                                            </Link>{' '}\n                                            {new Date().getFullYear()}\n                                            {'.'}\n    \n                                            <IconButton onClick={() => {\n                                                dispatch(changeDark());\n                                                darkAlert(dark);\n                                            }}>\n                                                { dark ? <Brightness4Icon fontSize=\"small\"/>: <Brightness7Icon fontSize=\"small\"/> }\n                                            </IconButton>\n                                       </Typography>\n                                    </Box>\n    \n                                </Form>\n                            )}\n                        </Formik>\n    \n    \n    \n                    </div>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default SigninPage;","import React from 'react';\n//MATERIAL-UI\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n//ROUTER-DOM\nimport { useHistory } from 'react-router-dom';\n//REDUX-TOOLKIT\nimport { useSelector } from 'react-redux';\nimport { selectDark } from '../../toolkit/darkSlice';\nimport { selectUser } from '../../toolkit/userSlice';\n//SWEETALERT2\nimport { pageDelayAlert } from '../../alerts';\n\nfunction Header() {\n    const dark = useSelector(selectDark);\n    const users = useSelector(selectUser);\n\n    let eachMatchedBooleans = users[users.length - 1].map(item => item.matched);   //grap each 'matched' from all objects in form of an array\n    let ifAnyMatchedTrue = eachMatchedBooleans?.includes(true);                    //if any index have that value returns true otherwise false    \n\n    const screen700 = useMediaQuery('(max-width:700px)');\n\n    const history = useHistory();\n\n    return (\n        <AppBar\n            elevation={0}\n            className=\"header\"\n            id={dark ? \"darkRespectAll\" : \"lightRespectAll\"}\n        >\n            <Toolbar className=\"toolbar\">\n                <Typography className=\"toolbar_heading\" onClick={() => history.push('/')}>\n                    Diary Application\n                </Typography>\n                { \n                    !ifAnyMatchedTrue && <Button disableRipple onClick={() => history.push('/')} size={screen700 ? \"small\" : \"medium\"}> HOME </Button>\n                }\n                <Button\n                    disableRipple\n                    onClick={() => {\n                        history.push('/diaries');\n                        pageDelayAlert('Diaries');\n                    }}\n                    size={screen700 ? \"small\" : \"medium\"}\n                    className=\"hideon330\"\n                >\n                    DIARIES\n                </Button>\n                {\n                    ifAnyMatchedTrue && <Button disableRipple onClick={() => history.push('/signingout')} size={screen700 ? \"small\" : \"medium\"}> SIGNOUT </Button>\n                }\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Header;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const hisuseridSlice = createSlice({\n    name: \"hisuserid\",\n\n    initialState: {\n        value: 0\n    } as {\n        value: number\n    },\n\n    reducers: {\n        storeHisuserid: (state, action) => {\n            state.value = action.payload\n        }\n    }\n})\n\nexport const { storeHisuserid } = hisuseridSlice.actions;\nexport const selectHisuserid = (state) => state.hisuseridSliceReducer.value;\nexport default hisuseridSlice.reducer;","import React, { useState } from 'react';\nimport classnames from 'classnames';\n//MATERIAL-UI\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n//ROUTER-DOM\nimport { useHistory } from 'react-router-dom';\n//REDUX-TOOLKIT\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectDark } from '../../toolkit/darkSlice';\nimport { selectUser } from '../../toolkit/userSlice';\nimport { storeHisuserid } from '../../toolkit/hisuseridSlice';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            flexBasis: '33.33%',\n            flexShrink: 0,\n        },\n        secondaryHeading: {\n            fontSize: theme.typography.pxToRem(15),\n            color: theme.palette.text.secondary,\n        }\n    })\n)\n\nfunction List() {\n    const classes = useStyles();\n    const [ expanded, setExpanded ] = useState<string | false>(false);\n    const screen700 = useMediaQuery('(max-width:700px)');\n\n    const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n        setExpanded(isExpanded ? panel : false);\n    }\n\n    const dark = useSelector(selectDark);\n    const themeA = createMuiTheme({\n        //for accordion only\n        palette: {\n            type: dark ? \"dark\" : \"light\",\n            background: {     //black     //white\n                paper: dark ? \"#424242\" : \"#d3d3d3\"\n            }\n        }\n    })\n    const themeB = createMuiTheme({\n        //for accordion only\n        palette: {\n            type: dark ? \"dark\" : \"light\",\n            background: {      //white    //black\n                paper: dark ? \"#d3d3d3\" : \"#424242\"\n            }\n        }\n    })\n\n    const users = useSelector(selectUser);\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n    \n    if(users[users?.length-1] === []) {\n        return <div> Loading. . . </div>\n    }\n    else {\n        return (\n            <>\n                {\n                    (users[users?.length-1]?.length !== 1)\n                    ? (\n                        <ThemeProvider theme={themeA}>\n                            <div\n                                className={classnames(classes.root, \"ifnotempty\")}\n                                id={!dark ? \"darkRespectAll\" : \"lightRespectAll\"}\n                            >\n                            {\n                                users[users?.length-1]?.map((item) => {\n                                    if(item.id === 0) {    //bcz starts from 1\n                                        return null;\n                                    }\n    \n                                    return (\n                                        <Accordion expanded={expanded === `panel${item.id}`} onChange={handleChange(`panel${item.id}`)} key={item.id} square>\n                                            <AccordionSummary\n                                                expandIcon={<ExpandMoreIcon />}\n                                                aria-controls={`panel${item.id}bh-content`}\n                                                id={`panel${item.id}bh-header`}\n                                        >\n                                                <Typography className={classes.heading} id=\"id\"> {item.id}. </Typography>\n                                                <Typography className={classes.secondaryHeading} id=\"username\"> {item.username} </Typography>\n                                            </AccordionSummary>\n                                            <AccordionDetails id=\"details\">\n                                                <table className=\"table table-hover table-dark table-sm\">\n                                                    <tbody>\n                                                        <tr>\n                                                            <th> Id </th> <td> {item.id} </td>\n                                                        </tr>\n                                                        <tr>\n                                                            <th> Name </th> <td> {item.username} </td>\n                                                        </tr>\n                                                        <tr>\n                                                            <th> Email </th> <td> {item.email} </td>\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </AccordionDetails>\n                                            <div className=\"styled\">\n                                                <ThemeProvider theme={themeB}>\n                                                    <Button disableRipple onClick={() => { history.push('/hispublicdiaries'); dispatch(storeHisuserid(item.id)) }} style={{ width: \"7rem\" }} size={screen700 ? \"small\" : \"medium\"}>\n                                                        PUBLIC DIARIES\n                                                    </Button>\n                                                </ThemeProvider>\n                                            </div>\n                                        </Accordion>\n                                    )\n                                })\n                            }\n                            </div>\n                        </ThemeProvider>\n                    ) : (\n                        <div\n                            className=\"ifempty\"\n                            id={!dark ? \"darkRespectAll\" : \"lightRespectAll\"}\n                        >\n                            <Typography component=\"p\"> no users. . :'( </Typography>\n                        </div>\n                    )\n                }\n            </>\n        )    \n    }\n}\n\nexport default List;","export default __webpack_public_path__ + \"static/media/pic1.b21af5f6.png\";","export default __webpack_public_path__ + \"static/media/wallpaper1.19c3a6b3.png\";","export default __webpack_public_path__ + \"static/media/wallpaper2.e96f3f05.png\";","export default __webpack_public_path__ + \"static/media/wallpaper3.506f89a3.png\";","export default __webpack_public_path__ + \"static/media/pic2.e005b6fd.png\";","import Delayed from 'react-delayed';\n\ninterface DelayRenderProps {\n    children : JSX.Element | JSX.Element[];\n            //type of 'children' in React TYPESCRIPT\n}\n\nfunction DelayRender({ children }: DelayRenderProps) {\n    return (\n        <Delayed mounted={true} mountAfter={500} unmountAfter={500}>\n            {children}\n        </Delayed>\n    )\n}\n\nexport default DelayRender;","import React from 'react';\nimport { pic1 } from '../../images';\nimport DelayRender from '../../DelayRender';\n//MATERIAL-UI\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport Hidden from '@material-ui/core/Hidden';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n//ROUTER-DOM\nimport { useHistory } from 'react-router-dom';\n//REDUX-TOOLKIT\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectDark, changeDark } from '../../toolkit/darkSlice';\nimport { selectUser } from '../../toolkit/userSlice';\n//SWEETALERT2\nimport { darkAlert, pageAlert, pageDelayAlert } from '../../alerts';\n\nfunction Data() {\n    const dark = useSelector(selectDark);\n    const users = useSelector(selectUser);\n    const dispatch = useDispatch();\n\n    let eachMatchedBooleans = users[users.length-1].map(item => item.matched);   //grap each 'matched' from all objects in form of an array\n    let ifAnyMatchedTrue = eachMatchedBooleans?.includes(true);                  //if any index have that value returns true otherwise false    \n\n    const screen292 = useMediaQuery('(max-width:292px)');\n    const screen700 = useMediaQuery('(max-width:700px)');\n    const screen420 = useMediaQuery('(max-width:420px)');\n\n    const history = useHistory();\n\n    return (\n        <>\n            {\n                (ifAnyMatchedTrue)    //means any one signedin\n                ? (\n                    <div className=\"jumbotron\" id={dark ? \"darkRespectAll\" : \"lightRespectAll\"}>\n                        <img\n                            src={pic1}\n                            alt=\"User\"\n                        />\n\n                        <hr className=\"my-1\"/>\n            \n                        <p className=\"lead\">\n                            <div className=\"container\">\n                                <span> {!screen292 ? `Wanna Visit Now?` : `Visit Now!`} </span>\n                                <Hidden smDown>\n                                    <Button disableRipple onClick={() => { history.push('/diaries'); pageDelayAlert('Diaries'); }} style={{ width: \"7rem\" }} size={screen700 ? \"small\" : \"medium\"} id=\"btn\">\n                                        VISIT DIARY\n                                    </Button>\n                                </Hidden>\n                            </div>\n    \n                            <div className=\"showon960\">\n                                <Hidden mdUp>\n                                    <Button disableRipple onClick={() => { history.push('/diaries'); pageDelayAlert('Diaries'); }} style={{ width: \"7rem\" }} size={screen700 ? \"small\" : \"medium\"} id=\"btn\">\n                                        VISIT DIARY\n                                    </Button>\n                                </Hidden>\n    \n                                <IconButton\n                                    disableRipple\n                                    onClick={() => { dispatch(changeDark()); darkAlert(dark); }}\n                                    style={{ backgroundColor: \"transparent\" }}\n                                    id=\"iconbutton\"\n                                >\n                                    { dark ? <Brightness4Icon fontSize=\"small\"/>: <Brightness7Icon fontSize=\"small\"/> }\n                                </IconButton>\n                            </div>\n                        </p>\n                    </div>\n                ) : (\n                    <DelayRender>\n                    <div className=\"jumbotron jumbotron2\" id={dark ? \"darkRespectAll\" : \"lightRespectAll\"}>\n                        <h1 className=\"display-4\"> {!screen420 ? `Create Diary!` : `Diary!`} </h1>\n            \n                        <p className=\"lead lead2\">\n                            \"The life is like a diary\".\n                            <br/> <p><i style={{ color: dark ? \"#000000\" : \"#5bc0de\" }}>James Matthew</i></p>\n                        </p>\n            \n                        <hr className=\"my-4\"/>\n            \n                        <p className=\"lead\">\n                            <div className=\"container\">\n                                <span> {!screen292 ? `Wanna SignIn Now?` : `SignIn Now?`}  </span>\n                                <Button\n                                    id=\"btns\"\n                                    disableRipple\n                                    style={{ marginLeft: \"1.05rem\" }}\n                                    onClick={() => {\n                                        history.push('/signin');\n                                        pageAlert('Signin Form', 'top-end', 'success');                            \n                                    }}\n                                    size={screen292 ? \"small\" : \"medium\"}\n                                >\n                                    SIGN <br/> IN\n                                </Button>\n                            </div>\n            \n                            <div className=\"container\">\n                                <span> {!screen292 ? `Wanna SignUp Now?` : `SignUp Now?`}  </span>\n                                <Button\n                                    id=\"btns\"\n                                    disableRipple\n                                    onClick={() => {\n                                        history.push('/signup');\n                                        pageAlert('Signup Form', 'top-start', 'success');\n                                    }}\n                                    size={screen292 ? \"small\" : \"medium\"}\n                                >\n\n                                    SIGN <br/> UP\n                                </Button>\n                            </div>\n            \n                            <IconButton\n                                disableRipple\n                                onClick={() => { dispatch(changeDark()); darkAlert(dark); }}\n                                style={{ backgroundColor: \"transparent\", marginLeft: \"-2.05rem\", marginTop: \"0.25rem\" }}\n                                id=\"iconbutton\"\n                            >\n                                { dark ? <Brightness4Icon fontSize=\"small\"/>: <Brightness7Icon fontSize=\"small\"/> }\n                            </IconButton>\n                        </p>\n                    </div>\n                    </DelayRender>\n                )\n            }\n        </>\n    )\n}\n\nexport default Data;","import React from 'react';\nimport Header from './Header';\nimport List from './List';\nimport Data from './Data';\nimport Footer from '../FrontPage/Footer';\n//MATERIAL-UI\nimport Hidden from '@material-ui/core/Hidden';\n//REACT-HELMET\nimport Head from '../../Head';\n\nfunction UsersPage() {\n    return (\n        <>\n            <Head title=\"Users\"/>\n   \n            <div className=\"userspage\">\n                <div className=\"userspage_header\">\n                    <Header\n                    />\n                </div>\n    \n                <div className=\"userspage_body\">\n                    <Hidden smDown>\n                    <div className=\"userspage_body_list\">\n                        <List\n                        />\n                    </div>\n                    </Hidden>\n    \n                    <div className=\"userspage_body_data\">\n                        <Data\n                        />\n                    </div>\n    \n                    <Hidden mdUp>\n                    <div className=\"userspage_body_list\">\n                        <List\n                        />\n                    </div>\n                    </Hidden>\n                </div>\n    \n                <div className=\"userspage_footer\">\n                    <Footer\n                    />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default UsersPage;","import React from 'react';\n//MATERIAL-UI\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n//ROUTER-DOM\nimport { useHistory } from 'react-router-dom';\n//REDUX-TOOLKIT\nimport { useSelector } from 'react-redux';\nimport { selectDark } from '../../toolkit/darkSlice';\nimport { selectUser } from '../../toolkit/userSlice';\n//SWEETALERT2\nimport { pageDelayAlert } from '../../alerts';\n\nfunction Header() {\n    const dark = useSelector(selectDark);\n    const users = useSelector(selectUser);\n\n    let eachMatchedBooleans = users[users.length - 1].map(item => item.matched);   //grap each 'matched' from all objects in form of an array\n    let ifAnyMatchedTrue = eachMatchedBooleans?.includes(true);                    //if any index have that value returns true otherwise false    \n\n    const screen700 = useMediaQuery('(max-width:700px)');\n    const screen500 = useMediaQuery('(max-width:500px)');\n\n    const history = useHistory();\n\n    return (\n        <AppBar\n            elevation={0}\n            className=\"header\"\n            id={dark ? \"darkRespectAll\" : \"lightRespectAll\"}\n        >\n            <Toolbar className=\"toolbar\">\n                <Typography className=\"toolbar_heading\" onClick={() => history.push('/')}>\n                    Diary {screen500 ? `App` : `Application`} \n                </Typography>\n                { \n                    !ifAnyMatchedTrue && <Button disableRipple onClick={() => history.push('/')} size={screen700 ? \"small\" : \"medium\"}> HOME </Button>\n                }\n                <Button\n                    disableRipple\n                    onClick={() => {\n                        history.push('/users');\n                        pageDelayAlert('Users');\n                    }}\n                    size={screen700 ? \"small\" : \"medium\"}\n                    className=\"hideon330\"\n                >\n                    USERS\n                </Button>                    \n                {\n                    ifAnyMatchedTrue && <Button disableRipple onClick={() => history.push('/signingout')} size={screen700 ? \"small\" : \"medium\"}> SIGNOUT </Button>\n                }\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Header;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const useridSlice = createSlice({\n    name: \"userid\",\n\n    initialState: {\n        value: 0\n    } as {\n        value: number\n    },\n\n    reducers: {\n        storeUserid: (state, action) => {\n            state.value = action.payload\n        }\n    }\n})\n\nexport const { storeUserid } = useridSlice.actions;\nexport const selectUserid = (state) => state.useridSliceReducer.value;\nexport default useridSlice.reducer;","import React from 'react';\n//MATERIAL-UI\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n//SWEETALERT2\nimport Swal from 'sweetalert2';                               //dispatching data thats why using here directly\n//REDUX-TOOLKIT\nimport { useDispatch } from 'react-redux';\nimport { editNotes, editTitle, editPrivacy } from '../toolkit/diarySlice';\n\ninterface EditDiaryProp {\n    id: number;\n    privacy: 'private' | 'public';\n    title: string;\n    notes: string;\n}\n\nfunction EditDiary({ id, title, notes, privacy }: EditDiaryProp) {\n    const dispatch = useDispatch();\n\n\n    const handleEdit = async() => {\n        const { value } = await Swal.fire({\n            title             : '<p id=\"design\">Edit Diary</p>',\n            text              : 'Choose to edit for Diary?',\n            input             : 'radio',\n            inputOptions      : {\n                title         : 'Title',\n                privacy       : 'Privacy',\n                notes         : 'Notes'\n            },\n            inputValue        : 'title',\n            confirmButtonText : 'Next',\n            showCancelButton  : true\n        }) as any;\n        \n        if(value === undefined) {\n            Swal.fire({\n                icon: 'error',\n                title: '<p id=\"design\">Cancelled</p>',\n                text: 'editing cancelled!',\n                confirmButtonText: 'Close'\n            })\n        }\n        else if(value === \"notes\") {\n            (() => {\n                handleNotes();\n            })()\n        }\n        else if(value === \"title\") {\n            (() => {\n                handleTitle();\n            })()\n        }\n        else if(value === \"privacy\") {\n            (() => {\n                handlePrivacy();\n            })()\n        }\n    }\n\n\n    const handleNotes = async () => {\n        const { value } = await Swal.fire({\n            title: '<p id=\"design\">Diary Notes</p>',\n            input: 'textarea',\n            inputPlaceholder: 'Edit your diary notes here...',\n            inputValue: notes,\n            confirmButtonText : 'Save',\n            showCancelButton: true\n        }) as any;\n\n        if (value === undefined) {\n            Swal.fire({\n                icon: 'error',\n                title: '<p id=\"design\">Cancelled</p>',\n                text: 'editing Notes cancelled!',\n                confirmButtonText: 'Close'\n            })\n        }\n        else if (value === \"\") {\n            Swal.fire({\n                icon: 'warning',\n                title: '<p id=\"design\">Cancelled</p>',\n                text: 'You need to edit Notes!',\n                confirmButtonText: 'Retry'\n            })\n        }\n        else if(value === notes) {\n            Swal.fire({\n                icon: 'info',\n                title: `<p id=\"design\">Notes Unchanged </p>`,\n                text: `Notes remain same!`,\n                confirmButtonText: 'Close'\n            })        \n        }\n        else if (value !== \"\") {\n            dispatch(editNotes({ notes: value, id: id }));    //sending as object to redux for only device not server's api\n\n            Swal.fire({\n                icon: 'success',\n                title: '<p id=\"design\">Diary Edited</p>',\n                text: 'You edited notes!',\n                showConfirmButton: false,\n                timer: 2000\n            })\n        }\n    }\n\n\n    const handleTitle = async() => {\n        const { value } = await Swal.fire({\n            title: '<p id=\"design\">Diary Title</p>',\n            text: 'Edit title for Diary?',\n            input: 'text',\n            inputValue: title,\n            confirmButtonText : 'Save',\n            showCancelButton: true\n        }) as any;\n\n        if(value === undefined) {\n            Swal.fire({\n                icon: 'error',\n                title: '<p id=\"design\">Cancelled</p>',\n                text: 'editing Title cancelled!',\n                confirmButtonText: 'Close'\n            })    \n        }\n        else if (value === \"\") {\n            Swal.fire({\n                icon: 'warning',\n                title: '<p id=\"design\">Cancelled</p>',\n                text: 'You need to edit Title!',\n                confirmButtonText: 'Retry'\n            })\n        }\n        else if(value === title) {\n            Swal.fire({\n                icon: 'info',\n                title: `<p id=\"design\">Title Unchanged </p>`,\n                text: `Title remain same!`,\n                confirmButtonText: 'Close'\n            })        \n        }\n        else if (value !== \"\") {\n            dispatch(editTitle({ title: value, id: id }));    //sending as object to redux for only device not server's api\n\n            Swal.fire({\n                icon: 'success',\n                title: '<p id=\"design\">Diary Edited</p>',\n                text: 'You edited Title!',\n                showConfirmButton: false,\n                timer: 2000\n            })\n        }\n    }\n\n\n    const handlePrivacy = async() => {\n        const { value } = await Swal.fire({\n            title        : '<p id=\"design\">Diary Privacy</p>',\n            text         : 'Edit privacy for Diary?',\n            input        : 'radio',\n            inputOptions : {\n                public   : 'Public',\n                private  : 'Private'\n            },\n            inputValue   : 'public',\n            confirmButtonText : 'Save',\n            showCancelButton: true\n        })\n\n        if(value === undefined) {\n            Swal.fire({\n                icon: 'error',\n                title: '<p id=\"design\">Cancelled</p>',\n                text: 'editing Title cancelled!',\n                confirmButtonText: 'Close'\n            })\n        }\n        else if(value === privacy) {\n            Swal.fire({\n                icon: 'info',\n                title: `<p id=\"design\">Privacy Unchanged </p>`,\n                text: `Privacy remain same!`,\n                confirmButtonText: 'Close'\n            })        \n        }\n        else if(value === \"public\") {\n            dispatch(editPrivacy({ privacy: value, id: id }));    //sending as object to redux for only device not server's api\n\n            Swal.fire({\n                icon: 'success',\n                title: '<p id=\"design\">Diary Edited</p>',\n                text: 'You edited Privacy!',\n                showConfirmButton: false,\n                timer: 2000\n            })\n        }\n        else if(value === \"private\") {\n            dispatch(editPrivacy({ privacy: value, id: id }));    //sending as object to redux for only device not server's api\n\n            Swal.fire({\n                icon: 'success',\n                title: '<p id=\"design\">Diary Edited</p>',\n                text: 'You edited Privacy!',\n                showConfirmButton: false,\n                timer: 2000\n            })\n        }\n    }\n\n\n    const screen700 = useMediaQuery('(max-width:700px)');\n\n    return (\n        <Button disableRipple onClick={handleEdit} style={{ width: \"7rem\" }} size={screen700 ? \"small\" : \"medium\"}>\n            EDIT\n        </Button>\n    )\n}\n\nexport default EditDiary;","import { useState } from 'react';\n//MATERIAL-UI\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n//REACT-BOOTSTRAP\nimport { Modal, Button as Buttons } from 'react-bootstrap';\n\ninterface ReadDiaryProp {\n    title: string;\n    notes: string;\n}\n\nfunction ReadDiary({ title, notes }: ReadDiaryProp) {\n    const screen700 = useMediaQuery('(max-width:700px)');\n\n    const [ modalShow, setModalShow ] = useState(false);\n\n    return (\n        <span id=\"read\">\n            <Button disableRipple onClick={() => setModalShow(true)} style={{ width: \"7rem\" }} size={screen700 ? \"small\" : \"medium\"}>\n                READ\n            </Button>\n\n            <Modal\n                size=\"sm\"\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                scrollable\n                className=\"modal\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"modal_title\">\n                        {title}\n                    </Modal.Title>\n                </Modal.Header>\n        \n                <Modal.Body>\n                    <p className=\"modal_notes\"> {notes} </p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Buttons onClick={() => setModalShow(false)}>\n                        Close\n                    </Buttons>\n                </Modal.Footer>\n            </Modal>\n        </span>\n    )\n}\n\nexport default ReadDiary;","import React, { useState } from 'react';\nimport classnames from 'classnames';\n//MATERIAL-UI\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n//REDUX-TOOLKIT\nimport { useSelector } from 'react-redux';\nimport { selectDark } from '../../toolkit/darkSlice';\nimport { selectDiary } from '../../toolkit/diarySlice';\nimport { selectUser } from '../../toolkit/userSlice';\nimport { selectUserid } from '../../toolkit/useridSlice';\n//FOR EDIT DIARY\nimport EditDiary from '../EditDiary';\n//FOR READ DIARY\nimport ReadDiary from '../ReadDiary';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            flexBasis: '33.33%',\n            flexShrink: 0,\n        },\n        secondaryHeading: {\n            fontSize: theme.typography.pxToRem(15),\n            color: theme.palette.text.secondary,\n        }\n    })\n)\n\nconst truncate = (str: string, n: number) => str?.length > n ? `${str.substr(0, n-1)} ...` : str;\n\nfunction List() {\n    const classes = useStyles();\n    const [ expanded, setExpanded ] = useState<string | false>(false);\n\n    const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n        setExpanded(isExpanded ? panel : false);\n    }\n\n    const dark = useSelector(selectDark);\n    const theme = createMuiTheme({\n        //for accordion only\n        palette: {\n            type: dark ? \"dark\" : \"light\",\n            background: {     //black     //white\n                paper: dark ? \"#424242\" : \"#d3d3d3\"\n            }\n        }\n    })\n\n    const users = useSelector(selectUser);\n    let eachMatchedBooleans = users[users.length-1].map(item => item.matched);   //grap each 'matched' from all objects in form of an array\n    let ifAnyMatchedTrue = eachMatchedBooleans?.includes(true);                  //if any index have that value returns true otherwise false    \n\n    const diaries = useSelector(selectDiary);\n    const userid = useSelector(selectUserid);\n\n    if (diaries[diaries?.length-1] === []) {\n        return <div> Loading. . . </div>\n    }\n    else {\n        let no:number = 0;\n\n        return (\n            <>\n                {\n                    (diaries[diaries?.length-1]?.length !== 1)\n                    ? (\n                        <ThemeProvider theme={theme}>\n                            <div\n                                className={classnames(classes.root, \"ifnotempty\")}\n                                id={!dark ? \"darkRespectAll\" : \"lightRespectAll\"}\n                            >\n                                {\n                                    diaries[diaries?.length-1]?.map((item) => {\n                                        if(\n                                            item.privacy === 'public'       //* if public then show\n                                            ||                              //* OR\n                                            (\n                                                item.privacy === 'private'  //* when private\n                                                &&\n                                                item.userId === userid      //* also user's id match\n                                                &&\n                                                ifAnyMatchedTrue            //* also user is signedin\n                                            ) \n                                        ) {\n                                            if(item.id === 0) {    //bcz starts from 1\n                                                return null;\n                                            }\n                                            ++no;\n    \n                                            return (\n                                                <Accordion expanded={expanded === `panel${no}`} onChange={handleChange(`panel${no}`)} key={no} square>\n                                                    <AccordionSummary\n                                                        expandIcon={<ExpandMoreIcon />}\n                                                        aria-controls={`panel${no}bh-content`}\n                                                        id={`panel${no}bh-header`}\n                                                    >\n                                                        <Typography className={classes.heading} id=\"id\"> {no}. </Typography>\n                                                        <Typography className={classes.secondaryHeading} id=\"username\"> {item.title} </Typography>\n                                                    </AccordionSummary>\n                                                    <AccordionDetails id=\"details\">\n                                                        <table className=\"table table-hover table-dark table-sm\">\n                                                            <tbody>\n                                                                <tr>\n                                                                    <th> Id </th> <td> {no} </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th> UserId </th> <td> {item.userId} </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th> Title </th> <td> {item.title} </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th> Privacy </th> <td> {item.privacy} </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th> Notes </th> <td> {truncate(item.notes, 50)} </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th> Created Date </th> <td> {item.createdDate} </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th> Created Time </th> <td> {item.createdTime} </td>\n                                                                </tr>\n                                                            </tbody>\n                                                        </table>\n                                                        <div id={!dark ? \"darkRespectAll\" : \"lightRespectAll\"}>\n                                                            {\n                                                                ifAnyMatchedTrue && (\n                                                                    <EditDiary   /*button*/\n                                                                        id={item.id}\n                                                                        title={item.title}\n                                                                        privacy={item.privacy}\n                                                                        notes={item.notes}\n                                                                    />\n                                                                )\n                                                            }\n                                                            <ReadDiary   /*button*/\n                                                                title={item.title}\n                                                                notes={item.notes}\n                                                            />\n                                                         </div>\n                                                    </AccordionDetails>\n                                                </Accordion>\n                                            )    \n                                        }\n                                        else {\n                                            return null;\n                                        }\n                                    })\n                                }\n                            </div>\n                        </ThemeProvider>\n                    ) : (\n                        <div\n                            className=\"ifempty\"\n                            id={!dark ? \"darkRespectAll\" : \"lightRespectAll\"}\n                        >\n                            <Typography component=\"p\"> no diaries. . :'( </Typography>\n                        </div>\n                    )\n                }\n            </>\n        )\n    }\n}\n\nexport default List;","import React from 'react';\n//MATERIAL-UI\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n//SWEETALERT2\nimport Swal from 'sweetalert2';                //dispatching data thats why using here directly\n//REDUX-TOOLKIT\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectDiary, fetchedDiary } from '../toolkit/diarySlice';\nimport { selectUserid } from '../toolkit/useridSlice';\n//AXIOS\nimport { postDiary } from '../api';\n\nfunction NewDiary() {\n    const userid = useSelector(selectUserid);\n    const diaries = useSelector(selectDiary);  //for id of new diary only\n    const dispatch = useDispatch();\n\n\n    const handleChange = async () => {\n        const { value } = await Swal.mixin({\n            input: 'text',\n            confirmButtonText: 'Next',\n            showCancelButton: true,\n            progressSteps: ['1', '2', '3'],\n        }).queue([\n            {\n                title : '<p id=\"design\">Diary Title</p>',\n                text  : 'What title for Diary?',\n                input : 'text'\n            },\n            {\n                title        : '<p id=\"design\">Diary Privacy</p>',\n                text         : 'Choose privacy for Diary?',\n                input        : 'radio',\n                inputOptions : {\n                    public   : 'Public',\n                    private  : 'Private'\n                },\n                inputValue   : 'public'\n            },\n            {\n                title            : '<p id=\"design\">Diary Notes</p>',\n                input            : 'textarea',\n                inputPlaceholder : 'Type your notes here...',\n            }\n        ]) as any;\n\n        if (value) {                           //value as Array if Swal containing multiple value\n            if(value[0] === \"\") {\n                Swal.fire({\n                    icon: 'warning',\n                    title: '<p id=\"design\">Cancelled</p>',\n                    text: 'You need to give Title!',\n                    confirmButtonText: 'Retry'\n                })\n            }\n            else if(value[2] === \"\") {\n                Swal.fire({\n                    icon: 'warning',\n                    title: '<p id=\"design\">Cancelled</p>',\n                    text: 'You need to give Notes!',\n                    confirmButtonText: 'Retry'\n                })\n            }\n            else if (value[0] && value[1] && value[2]) {\n                postDiary({                    //updating data to server's api\n                    title       : value[0],\n                    privacy     : value[1],\n                    notes       : value[2],\n                    id          : diaries.length,\n                    userId      : userid,\n                    createdDate : `${new Date().getDate()}/${new Date().getMonth()}/${new Date().getFullYear()}`,\n                    createdTime : new Date().toLocaleTimeString()\n                })\n\n                dispatch(fetchedDiary());      //saving updated data to redux\n\n                Swal.fire({\n                    icon: 'success',\n                    title: '<p id=\"design\">Diary Created</p>',\n                    text: 'You created a Diary!',\n                    showConfirmButton: false,\n                    timer: 2000\n                })\n            }\n        }\n        else {\n            Swal.fire({\n                icon: 'error',\n                title: '<p id=\"design\">Cancelled</p>',\n                text: 'regristration cancelled!',\n                confirmButtonText: 'Close'\n            })    \n        }\n    }\n\n\n    const screen700 = useMediaQuery('(max-width:700px)');\n\n    return (\n        <Button disableRipple onClick={handleChange} style={{ width: \"7rem\" }} size={screen700 ? \"small\" : \"medium\"}>\n            NEW DIARY\n        </Button>\n    )\n}\n\nexport default NewDiary;","import React from 'react';\nimport { pic1 } from '../../images';\nimport DelayRender from '../../DelayRender';\n//MATERIAL-UI\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport Hidden from '@material-ui/core/Hidden';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n//ROUTER-DOM\nimport { useHistory } from 'react-router-dom';\n//REDUX-TOOLKIT\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectDark, changeDark } from '../../toolkit/darkSlice';\nimport { selectUser } from '../../toolkit/userSlice';\n//SWEETALERT2\nimport { darkAlert, pageAlert } from '../../alerts';\n//FOR NEW DIARY\nimport NewDiary from '../NewDiary';\n\nfunction Data() {\n    const dark = useSelector(selectDark);\n    const users = useSelector(selectUser);\n    const dispatch = useDispatch();\n\n    let eachMatchedBooleans = users[users.length-1].map(item => item.matched);   //grap each 'matched' from all objects in form of an array\n    let ifAnyMatchedTrue = eachMatchedBooleans?.includes(true);                  //if any index have that value returns true otherwise false    \n\n    const screen292 = useMediaQuery('(max-width:292px)');\n    const screen255 = useMediaQuery('(max-width:255px)');\n\n    const history = useHistory();\n\n    return (\n        <>\n            {\n                (ifAnyMatchedTrue)    //means any one signedin\n                ? (\n                    <div className=\"jumbotron\" id={dark ? \"darkRespectAll\" : \"lightRespectAll\"}>\n                        <img\n                            src={pic1}\n                            alt=\"Diary\"\n                        />\n\n                        <hr className=\"my-1\"/>\n            \n                        <p className=\"lead\">\n                            <div className=\"container\">\n                                <span> {!screen292 ? `Wanna Create Now?` : `Create Now!`} </span>\n                                <Hidden smDown>\n                                    <NewDiary   /*button*/\n                                    />\n                                </Hidden>\n                            </div>\n\n                            <div className=\"showon960\">\n                                <Hidden mdUp>\n                                    <NewDiary   /*button*/\n                                    />\n                                </Hidden>\n    \n                                <IconButton\n                                    disableRipple\n                                    onClick={() => { dispatch(changeDark()); darkAlert(dark); }}\n                                    style={{ backgroundColor: \"transparent\" }}\n                                    id=\"iconbutton\"\n                                >\n                                    { dark ? <Brightness4Icon fontSize=\"small\"/>: <Brightness7Icon fontSize=\"small\"/> }\n                                </IconButton>\n                            </div>\n                        </p>\n                    </div>\n                ) : (\n                    <DelayRender>\n                    <div className=\"jumbotron jumbotron2\" id={dark ? \"darkRespectAll\" : \"lightRespectAll\"}>\n                        <h1 className=\"display-4\"> {!screen255 ? `Create Diary!` : `Diary!`} </h1>\n            \n                        <p className=\"lead lead2\">\n                            \"The life is like a diary\".\n                            <br/> <p><i style={{ color: dark ? \"#000000\" : \"#5bc0de\" }}>James Matthew</i></p>\n                        </p>\n            \n                        <hr className=\"my-4\"/>\n            \n                        <p className=\"lead\">\n                            <div className=\"container\">\n                                <span> {!screen292 ? `Wanna SignIn Now?` : `SignIn Now?`}  </span>\n                                <Button\n                                    id=\"btns\"\n                                    disableRipple\n                                    style={{ marginLeft: \"1.05rem\" }}\n                                    onClick={() => {\n                                        history.push('/signin');\n                                        pageAlert('Signin Form', 'top-end', 'success');                            \n                                    }}\n                                    size={screen292 ? \"small\" : \"medium\"}\n                                >\n                                    SIGN <br/> IN\n                                </Button>\n                            </div>\n            \n                            <div className=\"container\">\n                                <span> {!screen292 ? `Wanna SignUp Now?` : `SignUp Now?`}  </span>\n                                <Button\n                                    id=\"btns\"\n                                    disableRipple\n                                    onClick={() => {\n                                        history.push('/signup');\n                                        pageAlert('Signup Form', 'top-start', 'success');\n                                    }}\n                                    size={screen292 ? \"small\" : \"medium\"}\n                                >\n\n                                    SIGN <br/> UP\n                                </Button>\n                            </div>\n            \n                            <IconButton\n                                disableRipple\n                                onClick={() => { dispatch(changeDark()); darkAlert(dark); }}\n                                style={{ backgroundColor: \"transparent\", marginLeft: \"-2.05rem\", marginTop: \"0.25rem\" }}\n                                id=\"iconbutton\"\n                            >\n                                { dark ? <Brightness4Icon fontSize=\"small\"/>: <Brightness7Icon fontSize=\"small\"/> }\n                            </IconButton>\n                        </p>\n                    </div>\n                    </DelayRender>\n                )\n            }\n        </>\n    )\n}\n\nexport default Data;","import React from 'react';\nimport Header from './Header';\nimport List from './List';\nimport Data from './Data';\nimport Footer from '../FrontPage/Footer';\n//REACT-HELMET\nimport Head from '../../Head';\n\nfunction DiariesPage() {\n    return (\n        <>\n            <Head title=\"Diaries\"/>\n   \n            <div className=\"diariespage\">\n                <div className=\"diariespage_header\">\n                    <Header\n                    />\n                </div>\n    \n                <div className=\"diariespage_body\">\n                    <div className=\"diariespage_body_data\">\n                        <Data\n                        />\n                    </div>\n                    <div className=\"diariespage_body_list\">\n                        <List\n                        />\n                    </div>\n                </div>\n    \n                <div className=\"diariespage_footer\">\n                    <Footer\n                    />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default DiariesPage;","import React from 'react';\n//MATERIAL-UI\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n//ROUTER-DOM\nimport { useHistory } from 'react-router-dom';\n//REDUX-TOOLKIT\nimport { useSelector } from 'react-redux';\nimport { selectDark } from '../../toolkit/darkSlice';\nimport { selectUser } from '../../toolkit/userSlice';\n//SWEETALERT2\nimport { pageDelayAlert } from '../../alerts';\n\nfunction Header() {\n    const dark = useSelector(selectDark);\n    const users = useSelector(selectUser);\n\n    let eachMatchedBooleans = users[users.length - 1].map(item => item.matched);   //grap each 'matched' from all objects in form of an array\n    let ifAnyMatchedTrue = eachMatchedBooleans?.includes(true);                    //if any index have that value returns true otherwise false    \n\n    const screen700 = useMediaQuery('(max-width:700px)');\n    const screen500 = useMediaQuery('(max-width:500px)');\n\n    const history = useHistory();\n\n    return (\n        <AppBar\n            elevation={0}\n            className=\"header\"\n            id={dark ? \"darkRespectAll\" : \"lightRespectAll\"}\n        >\n            <Toolbar className=\"toolbar\">\n                <Typography className=\"toolbar_heading\" onClick={() => history.push('/')}>\n                    Diary {screen500 ? `App` : `Application`} \n                </Typography>\n                { \n                    !ifAnyMatchedTrue && <Button disableRipple onClick={() => history.push('/')} size={screen700 ? \"small\" : \"medium\"}> HOME </Button>\n                }\n                <Button\n                    disableRipple\n                    onClick={() => {\n                        history.push('/users');\n                        pageDelayAlert('Users');\n                    }}\n                    size={screen700 ? \"small\" : \"medium\"}\n                    className=\"hideon330\"\n                >\n                    USERS\n                </Button>                    \n                {\n                    ifAnyMatchedTrue && <Button disableRipple onClick={() => history.push('/signingout')} size={screen700 ? \"small\" : \"medium\"}> SIGNOUT </Button>\n                }\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Header;","import React, { useState } from 'react';\nimport classnames from 'classnames';\n//MATERIAL-UI\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n//REDUX-TOOLKIT\nimport { useSelector } from 'react-redux';\nimport { selectDark } from '../../toolkit/darkSlice';\nimport { selectDiary } from '../../toolkit/diarySlice';\nimport { selectHisuserid } from '../../toolkit/hisuseridSlice';\n//FOR READ DIARY\nimport ReadDiary from '../ReadDiary';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            flexBasis: '33.33%',\n            flexShrink: 0,\n        },\n        secondaryHeading: {\n            fontSize: theme.typography.pxToRem(15),\n            color: theme.palette.text.secondary,\n        }\n    })\n)\n\nconst truncate = (str: string, n: number) => str?.length > n ? `${str.substr(0, n-1)} ...` : str;\n\nfunction List() {\n    const classes = useStyles();\n    const [ expanded, setExpanded ] = useState<string | false>(false);\n\n    const handleChange = (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n        setExpanded(isExpanded ? panel : false);\n    }\n\n    const dark = useSelector(selectDark);\n    const theme = createMuiTheme({\n        //for accordion only\n        palette: {\n            type: dark ? \"dark\" : \"light\",\n            background: {     //black     //white\n                paper: dark ? \"#424242\" : \"#d3d3d3\"\n            }\n        }\n    })\n\n    const diaries = useSelector(selectDiary);\n    const hisuserid = useSelector(selectHisuserid);\n\n    if (diaries[diaries?.length-1] === []) {\n        return <div> Loading. . . </div>\n    }\n    else {\n        let no:number = 0;\n\n        return (\n            <>\n                {\n                    (diaries[diaries?.length-1]?.length !== 1)\n                    ? (\n                        <ThemeProvider theme={theme}>\n                            <div\n                                className={classnames(classes.root, \"ifnotempty\")}\n                                id={!dark ? \"darkRespectAll\" : \"lightRespectAll\"}\n                            >\n                                {\n                                    diaries[diaries?.length-1]?.map((item) => {\n                                        if(\n                                            item.privacy === 'public'  //* when private\n                                            &&\n                                            item.userId === hisuserid  //* also particular user's id match\n                                        ) {\n                                            if(item.id === 0) {    //bcz starts from 1\n                                                return null;\n                                            }\n                                            ++no;\n    \n                                            return (\n                                                <Accordion expanded={expanded === `panel${no}`} onChange={handleChange(`panel${no}`)} key={no} square>\n                                                    <AccordionSummary\n                                                        expandIcon={<ExpandMoreIcon />}\n                                                        aria-controls={`panel${no}bh-content`}\n                                                        id={`panel${no}bh-header`}\n                                                    >\n                                                        <Typography className={classes.heading} id=\"id\"> {no}. </Typography>\n                                                        <Typography className={classes.secondaryHeading} id=\"username\"> {item.title} </Typography>\n                                                    </AccordionSummary>\n                                                    <AccordionDetails id=\"details\">\n                                                        <table className=\"table table-hover table-dark table-sm\">\n                                                            <tbody>\n                                                                <tr>\n                                                                    <th> Id </th> <td> {no} </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th> UserId </th> <td> {item.userId} </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th> Title </th> <td> {item.title} </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th> Privacy </th> <td> {item.privacy} </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th> Notes </th> <td> {truncate(item.notes, 50)} </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th> Created Date </th> <td> {item.createdDate} </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <th> Created Time </th> <td> {item.createdTime} </td>\n                                                                </tr>\n                                                            </tbody>\n                                                        </table>\n                                                        <div id={!dark ? \"darkRespectAll\" : \"lightRespectAll\"}>\n                                                            <ReadDiary   /*button*/\n                                                                title={item.title}\n                                                                notes={item.notes}\n                                                            />\n                                                         </div>\n                                                    </AccordionDetails>\n                                                </Accordion>\n                                            )    \n                                        }\n                                        else {\n                                            return null;\n                                        }\n                                    })\n                                }\n                            </div>\n                        </ThemeProvider>\n                    ) : (\n                        <div\n                            className=\"ifempty\"\n                            id={!dark ? \"darkRespectAll\" : \"lightRespectAll\"}\n                        >\n                            <Typography component=\"p\"> no diaries. . :'( </Typography>\n                        </div>\n                    )\n                }\n            </>\n        )\n    }\n}\n\nexport default List;","import React from 'react';\nimport Header from './Header';\nimport List from './List';\nimport Footer from '../FrontPage/Footer';\n//REACT-HELMET\nimport Head from '../../Head';\n\nfunction HisPublicDiariesPage() {\n    return (\n        <>\n            <Head title=\"HisPublicDiaries\"/>\n\n            <div className=\"diariespage\">\n                <div className=\"diariespage_header\">\n                    <Header\n                    />\n                </div>\n    \n                <div className=\"diariespage_body full\">\n                    <div className=\"diariespage_body_list full_width\">\n                        <List\n                        />\n                    </div>\n                </div>\n    \n                <div className=\"diariespage_footer\">\n                    <Footer\n                    />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default HisPublicDiariesPage;","//REDUX-TOOLKIT\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from '../toolkit/userSlice';\nimport { storeUserid } from '../toolkit/useridSlice';\n//SWEETALERT2\nimport { signinSuccessAlert, signinErrorAlert } from '../alerts';\n//ROUTER-DOM\nimport { Redirect } from 'react-router-dom';\n\nfunction SigningIn() {\n    const users = useSelector(selectUser);\n    const dispatch = useDispatch();\n\n    let eachMatchedBooleans = users[users.length - 1].map(item => item.matched);   //grap each 'matched' from all objects in form of an array\n    let ifAnyMatchedTrue = eachMatchedBooleans?.includes(true);                    //if any index have that value returns true otherwise false\n\n    let thatUserId = eachMatchedBooleans?.indexOf(true);                           //grapping index of first 'true' value in array  & use as user's id\n\n    if(ifAnyMatchedTrue) {\n        dispatch(storeUserid(thatUserId));                                         //saving updated data to redux\n        signinSuccessAlert();\n\n        return (\n            <>\n                <Redirect to=\"/diaries\"/>\n            </>\n        )\n    }\n    else {\n        signinErrorAlert();\n\n        return (\n            <>\n               <Redirect to=\"/\"/>\n            </>\n        )\n    }\n}\n\nexport default SigningIn;","import { useEffect } from 'react';\n//REDUX-TOOLKIT\nimport { useDispatch } from 'react-redux';\nimport { quitUser } from '../toolkit/userSlice';\n//SWEETALERT2\nimport { signoutSuccessAlert } from '../alerts';\n//ROUTER-DOM\nimport { Redirect } from 'react-router-dom';\n\nfunction SigningOut() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(quitUser());\n    }, [])\n\n    return (\n        <>\n            <Redirect to=\"/\"/> {signoutSuccessAlert()}\n        </>\n    )\n}\n\nexport default SigningOut;","import React, { useEffect } from 'react';\n//MATERIAL-UI\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n//ROUTER-DOM\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n//REDUX-TOOLKIT\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectDark } from './toolkit/darkSlice';\nimport { fetchedUser } from './toolkit/userSlice';\nimport { fetchedDiary } from './toolkit/diarySlice';\n//COMPONENTS\nimport { FrontPage, SigninPage, SignupPage, UsersPage, DiariesPage, SigningIn, SigningOut, HisPublicDiariesPage } from './components';\n\nfunction App() {\n    const dark = useSelector(selectDark);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchedUser());       //saving initial data to redux\n        dispatch(fetchedDiary());      //saving initial data to redux\n    }, [])\n\n    const theme = createMuiTheme({\n        palette: {\n            type: dark ? \"dark\" : \"light\",\n            background: {     //black     //skyblue\n                paper: dark ? \"#000000\" : \"#5bc0de\"\n            },\n            primary: {\n                main: \"#000000\"\n            },\n            secondary: {\n                main: \"#5bc0de\"\n            }\n        }\n    })\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Router>\n                <Switch>\n                    <Route path='/' exact>\n                        <FrontPage\n                        />\n                    </Route>\n\n                    <Route path='/signin' exact>\n                        <SigninPage\n                        />\n                    </Route>\n\n                    <Route path='/signup' exact>\n                        <SignupPage\n                        />\n                    </Route>\n\n                    <Route path='/users' exact>\n                        <UsersPage\n                        />\n                    </Route>\n\n                    <Route path='/diaries' exact>\n                        <DiariesPage\n                        />\n                    </Route>\n\n                    <Route path='/signingin' exact>\n                        <SigningIn\n                        />\n                    </Route>\n\n                    <Route path='/signingout' exact>\n                        <SigningOut\n                        />\n                    </Route>\n\n                    <Route path='/hispublicdiaries' exact>\n                        <HisPublicDiariesPage\n                        />\n                    </Route>\n                </Switch>\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\nimport darkSliceReducer from './darkSlice';\nimport userSliceReducer from './userSlice';\nimport diarySliceReducer from './diarySlice';\nimport useridSliceReducer from './useridSlice';\nimport hisuseridSliceReducer from './hisuseridSlice';\n\nconst store = configureStore({\n    reducer: {\n        darkSliceReducer,\n        userSliceReducer,\n        diarySliceReducer,\n        useridSliceReducer,\n        hisuseridSliceReducer\n    }\n})\n\nexport default store;","import { createServer, Response, Request } from 'miragejs';\nimport user from '../json/user.json';\nimport diary from '../json/diary.json';\n//FIXED\nimport { Observable } from 'rxjs-compat';\n\nexport default function server() {\n    let server = createServer({\n        routes() {\n            this.namespace = \"api\";\n\n\n            this.get(\"/user\", () => {//          /api/user\n                return user;\n            })\n\n            this.get(\"/diary\", () => {//         /api/diary\n                return diary;\n            })\n\n\n            this.post(\"/newuser\", (schema: any, req: Request): Response | Observable<number> => {\n                user.push(JSON.parse(req.requestBody));\n            })\n\n            this.post(\"/newdiary\", (schema: any, req: Request): Response | Observable<number> => {\n                diary.push(JSON.parse(req.requestBody));\n            })\n        }\n    })\n\n    return server;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './scss/Style.scss';\n//REDUX-TOOLKIT\nimport store from './toolkit/store';\nimport { Provider } from 'react-redux';\n//MIRAGEJS\nimport server from './server';\n\n\nserver();\n\n\nReactDOM.render(\n<Provider store={store}>\n<App/>\n</Provider>\n, document.getElementById(\"root\"));"],"sourceRoot":""}